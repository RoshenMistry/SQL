//Project to get information from a fictional customer database for an electronics store with some database cleanup with null fields
//Question #1
//How many orders were placed in January?
SELECT COUNT(orderid) FROM BIT_DB.JanSales WHERE length(orderid) = 6 AND orderid <> 'Order ID';

//Question #2
//How many of those orders were for an iPhone?
SELECT COUNT(orderID) FROM BIT_DB.JanSales WHERE length(orderid) = 6 AND orderid <> 'Order ID' AND Product = 'iPhone';

//Question #3
//Select the customer account numbers for all the orders that were placed in February.
SELECT COUNT(distinct acctnum) FROM BIT_DB.customers cust INNER JOIN BIT_DB.FebSales Feb ON cust.order_id=FEB.orderid WHERE length(orderid) = 6 AND orderid <> 'Order ID';

//Question #4
//Which product was the cheapest one sold in January, and what was the price?
SELECT Product, min(price) FROM BIT_DB.FebSales WHERE length(orderid) = 6 AND orderid <> 'Order ID';

//Question #5
What is the total revenue for each product sold in January?
SELECT ROUND(SUM(Quantity * price) , 2) AS 'Revenue', product FROM BIT_DB.JanSales WHERE length(orderid) = 6 AND orderid <> 'Order ID' GROUP BY product;

//Question #6
//Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, price*Quantity AS Revenue FROM BIT_DB.FebSales WHERE location = '548 Lincoln St, Seattle, WA 98101' AND length(orderid) = 6 AND orderid <> 'Order ID' GROUP BY product;

//Question #7
//How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT AVG(price*Quantity),COUNT(distinct(customers.acctnum) )FROM BIT_DB.FebSales JOIN customers ON FebSales.orderID = customers.order_ID WHERE Quantity > 2 AND length(orderid) = 6 AND orderid <> 'Order ID';

//Question #8
//List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity) as 'Total Sold' FROM BIT_DB.FebSales WHERE location like '%Los Angeles%' GROUP BY Product;

//Question #8
Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).

//Question #9
How many of each type of headphone were sold in February?
SELECT distinct location, count(orderID) FROM BIT_DB.JanSales WHERE location like '%NY%' AND length(orderID) = 6 AND orderID <> 'Order ID' GROUP by location HAVING count(orderID) > 2;

//Question #10
What was the average amount spent per account in February? (Hints: For this question, we want the average amount spent / number of accounts, not the amount spent by each account. To multiply, you can use the * symbol, and to divide, you can use the / symbol.)
SELECT distinct product, SUM(Quantity) FROM BIT_DB.FebSales WHERE Product LIKE '%Headphone%' GROUP BY product;

//Question #11
What was the average quantity of products purchased per account in February? (Hint: just like question 3, we want the overall average, not the average for each account individually).
SELECT SUM(Quantity*price) AS 'Spend', COUNT(customers.acctnum) AS 'Total Unique Act Numbers', ROUND(SUM(Quantity*price)/COUNT((customers.acctnum)), 2) AS 'Final Average' FROM BIT_DB.FebSales JOIN customers ON FebSales.orderID = customers.order_id WHERE LENGTH(FebSales.orderID) = 6 AND FebSales.orderID <> 'Order ID';

//Question #12
Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT (ROUND(SUM(Quantity)/COUNT(customers.acctnum), 2)) AS 'Final Average' FROM BIT_DB.FebSales JOIN customers ON FebSales.orderID = customers.order_id WHERE LENGTH(FebSales.orderID) = 6 AND FebSales.orderID <> 'Order ID';








SELECT SUM(Quantity*Price), Product FROM BIT_DB.JanSales GROUP BY Product ORDER BY SUM(Quantity*Price) DESC LIMIT 1;

